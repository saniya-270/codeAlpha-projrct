mport pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2

# Load the dataset
data = pd.read_csv("sales_data.csv")

# Exploratory Data Analysis
print(data.isnull().sum())
sns.pairplot(data)
plt.show()
plt.figure(figsize=(8,6))
sns.heatmap(data.corr(), annot=True, cmap="coolwarm")
plt.show()

# Prepare data for training
X = data[['Advertising_Spend', 'Customer_Segment', 'Platform']]
y = data['Sales']
X = pd.get_dummies(X, drop_first=True)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the model
model = LinearRegression()
model.fit(X_train, y_train)

# Evaluate the model
y_pred = model.predict(X_test)
mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print(f"Mean Absolute Error: {mae}")
print(f"Mean Squared Error: {mse}")
print(f"RÂ² Score: {r2}")

# Predict future sales
new_data = pd.DataFrame({'Advertising_Spend': [50000], 'Customer_Segment': ['Young'], 'Platform': ['Online']})
new_data = pd.get_dummies(new_data)
predicted_sales = model.predict(new_data)
print(f"Predicted Sales: {predicted_sales[0]}")
